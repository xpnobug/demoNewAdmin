name: SonarCloud
on:
  push:
    branches:
      - master  # 当推送到 master 分支时触发
  pull_request:
    types: [ opened, synchronize, reopened ]  # 当PR打开、同步或重新打开时触发

jobs:
  build:
    name: Build and analyze  # 定义作业名称
    runs-on: ubuntu-latest  # 在最新版本的 Ubuntu 上运行

    steps:
      - uses: actions/checkout@v3  # 使用 GitHub 的 Checkout Action 检出代码
        with:
          fetch-depth: 0  # 禁用浅克隆，以提高分析相关性

      - name: Set up JDK 17  # 设置JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17  # 安装JDK 17
          distribution: 'zulu'  # 选择Zulu JDK分发版

      - name: Cache SonarCloud packages  # 缓存SonarCloud包
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache  # 缓存路径
          key: ${{ runner.os }}-sonar  # 缓存键
          restore-keys: ${{ runner.os }}-sonar  # 恢复键

      - name: Cache Maven packages  # 缓存Maven包
        uses: actions/cache@v3
        with:
          path: ~/.m2  # 缓存路径
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}  # 缓存键，基于操作系统和pom.xml文件的哈希值
          restore-keys: ${{ runner.os }}-m2  # 恢复键

      - name: Analyze # 第五步：执行代码分析
        run: |
          sed -i.bak '/<pluginRepositories>/,/<\/pluginRepositories>/d' pom.xml
          mvn -B verify -Psonar
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }} # 用于访问 GitHub 公关信息
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # 用于 SonarCloud 认证
