<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>demoNewAdmin</artifactId>
    <groupId>com.newadmin</groupId>
    <version>${revision}</version>
  </parent>

  <artifactId>demo-service</artifactId>
  <name>${project.artifactId}</name>
  <description>业务模块</description>

  <properties>
    <!-- ### 打包配置相关 ### -->
    <!-- 启动类 -->
    <main-class>com.newadmin.demoservice.DemoServiceApplication</main-class>
    <config-path>config</config-path>
    <!-- 程序 jar 输出目录 -->
    <bin-path>bin/</bin-path>
    <!-- 配置文件输出目录 -->
    <config-path>config/</config-path>
    <!-- 依赖 jar 输出目录 -->
    <lib-path>lib/</lib-path>
  </properties>

  <!-- 引入父工程的spring boot依赖 -->
  <dependencies>
    <dependency>
      <groupId>com.reai</groupId>
      <artifactId>demo-core</artifactId>
    </dependency>

    <dependency>
      <groupId>com.newadmin</groupId>
      <artifactId>demo-config</artifactId>
    </dependency>

    <dependency>
      <groupId>com.newadmin</groupId>
      <artifactId>demo-log</artifactId>
    </dependency>

    <dependency>
      <groupId>com.newadmin</groupId>
      <artifactId>demo-job</artifactId>
    </dependency>

    <dependency>
      <groupId>com.newadmin</groupId>
      <artifactId>demo-generator</artifactId>
    </dependency>

    <dependency>
      <groupId>me.zhenxin</groupId>
      <artifactId>qqbot-websocket</artifactId>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
    </dependency>
    <dependency>
      <groupId>org.jodd</groupId>
      <artifactId>jodd-http</artifactId>
      <version>6.3.0</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-websocket</artifactId>
    </dependency>

    <!-- Java 邮件支持 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
      <version>3.2.7</version>
    </dependency>

    <!-- Junit5 单元测试 -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
    </dependency>

  </dependencies>



  <build>
    <!-- 设置构建的 jar 包名 -->
    <finalName>${project.parent.name}</finalName>
    <plugins>
      <!-- Maven 打包插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <!-- 排除配置文件 -->
          <excludes>
            <exclude>${config-path}/</exclude>
            <exclude>db/</exclude>
            <exclude>templates/</exclude>
            <exclude>logback-spring.xml</exclude>
          </excludes>
          <archive>
            <manifest>
              <mainClass>${main-class}</mainClass>
              <!-- 为 MANIFEST.MF 中的 Class-Path 加入依赖 jar 目录前缀 -->
              <classpathPrefix>../${lib-path}</classpathPrefix>
              <addClasspath>true</addClasspath>
              <!-- jar 包不包含唯一版本标识 -->
              <useUniqueVersions>false</useUniqueVersions>
            </manifest>
            <manifestEntries>
              <!--为 MANIFEST.MF 中的 Class-Path 加入配置文件目录前缀 -->
              <Class-Path>../${config-path}</Class-Path>
            </manifestEntries>
          </archive>
          <outputDirectory>${project.build.directory}/app/${bin-path}</outputDirectory>
        </configuration>
      </plugin>
      <!-- 拷贝配置文件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/main/resources/${config-path}</directory>
                </resource>
                <resource>
                  <directory>src/main/resources</directory>
                  <includes>
                    <include>db/</include>
                    <include>templates/</include>
                    <include>logback-spring.xml</include>
                  </includes>
                </resource>
              </resources>
              <outputDirectory>${project.build.directory}/app/${config-path}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>