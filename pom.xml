<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- Spring Boot 启动父依赖 -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.0</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <!-- 项目说明：这里作为聚合工程的父工程 -->
  <groupId>com.newadmin</groupId>
  <artifactId>demoNewAdmin</artifactId>
  <version>${revision}</version>

  <packaging>pom</packaging>

  <name>demoNewAdmin</name>
  <description>demoNewAdmin</description>


  <!-- 模块聚合 -->
  <modules>
    <module>demo-service</module>
    <module>demo-config</module>
    <module>demo-log</module>
    <module>demo-extension</module>
  </modules>

  <!-- 版本管理 -->
  <properties>
    <revision>1.1.0-SNAPSHOT</revision>
    <spring.boot.version>3.2.0</spring.boot.version>
    <sonar.version>3.11.0.3922</sonar.version>
  </properties>

  <!-- 依赖声明 -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.reai</groupId>
        <artifactId>demo-core</artifactId>
        <version>1.0.0</version>
      </dependency>
      <dependency>
        <groupId>com.newadmin</groupId>
        <artifactId>demo-config</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>com.newadmin</groupId>
        <artifactId>demo-log</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>com.newadmin</groupId>
        <artifactId>demo-job</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>com.newadmin</groupId>
        <artifactId>demo-generator</artifactId>
        <version>${revision}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Hutool（小而全的 Java 工具类库，通过静态方法封装，降低相关 API 的学习成本，提高工作效率，使 Java 拥有函数式语言般的优雅，让 Java 语言也可以“甜甜的”） -->
    <dependency>
      <groupId>cn.hutool</groupId>
      <artifactId>hutool-all</artifactId>
      <version>5.8.20</version>
    </dependency>

    <!-- Lombok（在 Java 开发过程中用注解的方式，简化了 JavaBean 的编写，避免了冗余和样板式代码，让编写的类更加简洁） -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional> <!-- 表示依赖不会被传递 -->
    </dependency>
  </dependencies>

  <profiles>
    <!-- Sonar 代码质量分析 -->
    <profile>
      <id>sonar</id>
      <properties>
        <sonar.organization>xpnobug</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.projectKey>xpnobug_demoNewAdmin</sonar.projectKey>
        <sonar.moduleKey>${project.groupId}:${project.artifactId}</sonar.moduleKey>
      </properties>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>${sonar.version}</version>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>sonar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>maven-repo</id>
      <url>https://raw.githubusercontent.com/xpnobug/maven-repo/main/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <!-- 插件仓库配置 -->
  <pluginRepositories>
    <pluginRepository>
      <id>huawei-mirror</id>
      <name>HuaweiCloud Mirror</name>
      <url>https://mirrors.huaweicloud.com/repository/maven/</url>
    </pluginRepository>
    <pluginRepository>
      <id>ali-mirror</id>
      <name>AliYun Mirror</name>
      <url>https://maven.aliyun.com/repository/public/</url>
    </pluginRepository>
  </pluginRepositories>
</project>
